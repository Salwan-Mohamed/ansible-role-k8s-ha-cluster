---
# Common setup tasks for all nodes

- name: Update apt cache
  apt:
    update_cache: 'yes'
  changed_when: false

- name: Upgrade all packages
  apt:
    upgrade: 'yes'
  when: upgrade_system | default(false)

- name: Configure hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{ item.ip }} {{ item.hostname }}"
    state: present
  loop: "{{ control_plane_nodes + etcd_nodes + haproxy_nodes + worker_nodes }}"

- name: Add k8s-vip entry to hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{ virtual_ip }} k8s-vip"
    state: present

- name: Disable swap
  command: swapoff -a
  changed_when: false

- name: Disable swap in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\sswap\s.*)$'
    replace: '# \1'

- name: Create k8s modules file
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
    mode: 0644

- name: Load overlay kernel module
  modprobe:
    name: overlay
    state: present

- name: Load br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present

- name: Create k8s sysctl file
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
    mode: 0644

- name: Apply sysctl parameters
  command: sysctl --system
  changed_when: false

- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Install containerd
  apt:
    name: containerd
    state: present

- name: Create containerd directory
  file:
    path: /etc/containerd
    state: directory
    mode: 0755

- name: Generate default containerd config
  shell: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml
  notify: restart containerd

- name: Configure systemd cgroup driver for containerd
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'
  notify: restart containerd

- name: Ensure containerd is running and enabled
  service:
    name: containerd
    state: started
    enabled: 'yes'

- name: Add Kubernetes apt repository
  block:
    - name: Create apt keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755

    - name: Download Kubernetes apt key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key
        dest: /tmp/kubernetes-apt-key.gpg

    - name: Dearmor Kubernetes apt key
      shell: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-apt-key.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes apt repository
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: >-
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] 
          https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/ /
        mode: 0644
  when: inventory_hostname not in groups['etcd']

- name: Install kubeadm, kubelet, and kubectl
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: 'yes'
  when: inventory_hostname not in groups['etcd']
  notify: restart kubelet

- name: Hold kubeadm, kubelet, and kubectl packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl
  when: inventory_hostname not in groups['etcd']
